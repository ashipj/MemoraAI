AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Memora AI - Ingestion and Processing Stack

Globals:
  Function:
    Timeout: 900
    Runtime: python3.11
    MemorySize: 512

Resources:
  ConfluenceWriterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: confluence-writer-function
      Handler: handler.lambda_handler
      CodeUri: lambda_confluence_writer/
      Description: Creates or updates Confluence pages with summarized emails
      Environment:
        Variables:
          CONFLUENCE_URL: https://ashipj.atlassian.net/wiki
          CONFLUENCE_USER: ashipj@gmail.com
          CONFLUENCE_TOKEN: '{{resolve:secretsmanager:memora/email-confluence-secrets:SecretString:CONFLUENCE_TOKEN}}'
      Policies:
        - AWSLambdaBasicExecutionRole
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: arn:aws:secretsmanager:us-east-1:685148108183:secret:memora/*


  GmailReaderFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: email_reader.lambda_handler
      CodeUri: email_reader/
      Environment:
        Variables:
          DDB_TABLE_NAME: EmailStorage
          ACCESS_TOKEN: '{{resolve:secretsmanager:memora/email:SecretString:ACCESS_TOKEN}}'
          REFRESH_TOKEN: '{{resolve:secretsmanager:memora/email:SecretString:REFRESH_TOKEN}}'
          CLIENT_ID: '{{resolve:secretsmanager:memora/email:SecretString:CLIENT_ID}}'
          CLIENT_SECRET: '{{resolve:secretsmanager:memora/email:SecretString:CLIENT_SECRET}}'
      Events:
        ScheduledTrigger:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
      Policies:
        - DynamoDBCrudPolicy:
            TableName: EmailStorage

  EmailStorage:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: EmailStorage
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: threadId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: threadId-index
          KeySchema:
            - AttributeName: threadId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
            
  EmailOrchestratorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: MemoraEmailOrchestrator
      Handler: app.lambda_handler
      CodeUri: email_orchestrator/
      Policies:
        - AWSLambdaBasicExecutionRole
        - SecretsManagerReadWrite
        - DynamoDBCrudPolicy:
            TableName: EmailStorage
        - Statement:
          - Effect: Allow
            Action:
              - bedrock:InvokeAgent
            Resource: "*"
      Environment:
        Variables:
          DDB_TABLE_NAME: EmailStorage
          AGENT_ID: GCUHPGWEWO
          AGENT_ALIAS_ID: 60HGQN0VKA

Outputs:
  GmailReaderFunction:
    Description: Lambda for reading Gmail emails
    Value: !GetAtt GmailReaderFunction.Arn
  EmailStorageTable:
    Description: DynamoDB table for storing emails
    Value: !Ref EmailStorage


